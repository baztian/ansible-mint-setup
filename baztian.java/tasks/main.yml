---
- name: Install Java and associated packages
  apt:
    pkg:
      - openjdk-8-jdk
      - openjdk-8-source
      - visualvm
- name: Check if JDK-11 already installed
  stat:
    path: /opt/jdk11-{{ jdk11_version }}
  register: jdk11_directory
  tags: jdk11
- name: Download JDK-11
  get_url:
    url: "https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-{{ jdk11_version | replace('_', '%2B') }}/OpenJDK11U-jdk_x64_linux_hotspot_{{ jdk11_version }}.tar.gz"
    checksum: "sha256:{{ jdk11_sha256 }}"
    dest: "/tmp/jdk11-{{ jdk11_version }}.tar.gz"
  tags: jdk11
  when: not jdk11_directory.stat.exists
- name: Create jdk11 directory
  file:
    path: "/opt/jdk11-{{ jdk11_version }}"
    state: directory
  tags: jdk11
- name: Install jdk11
  unarchive:
    src: "/tmp/jdk11-{{ jdk11_version }}.tar.gz"
    extra_opts:
      - "--strip-components=1"
    dest: "/opt/jdk11-{{ jdk11_version }}"
    remote_src: yes
  tags: jdk11
  when: not jdk11_directory.stat.exists
- name: Symlink default jdk11
  file:
    src: "jdk11-{{ jdk11_version }}"
    dest: "/opt/jdk11"
    state: link
  tags: jdk11
- name: Symlink jdk11 bin
  file:
    src: "/opt/jdk11/bin/java"
    dest: "/usr/local/bin/java-11"
    state: link
  tags: jdk11
- name: Check if Maven 3 already installed
  stat:
    path: /opt/apache-maven-{{ maven3_version }}/bin/mvn
  register: mvn3_bin
- name: Download Maven 3
  get_url:
    url: http://archive.apache.org/dist/maven/maven-3/{{ maven3_version }}/binaries/apache-maven-{{ maven3_version }}-bin.tar.gz
    checksum: "sha512:{{ maven3_sha512 }}"
    dest: /tmp
  when: not mvn3_bin.stat.exists
- name: Unarchive Maven 3
  unarchive:
    src: /tmp/apache-maven-{{ maven3_version }}-bin.tar.gz
    dest: /opt
    remote_src: yes
  when: not mvn3_bin.stat.exists
- name: Symlink default mvn
  file:
    src: "apache-maven-{{ maven3_version }}"
    dest: "/opt/apache-maven"
    state: link
- name: Symlink mvn bin
  file:
    src: "/opt/apache-maven/bin/mvn"
    dest: "/usr/local/bin/mvn"
    state: link
- name: Check if Payara {{ payara_version }} already installed
  stat:
    path: /opt/payara-{{ payara_version }}/bin/asadmin
  register: payara_bin
  tags: payara
- name: Download Payara {{ payara_version }}
  get_url:
    url: https://s3-eu-west-1.amazonaws.com/payara.fish/Payara+Downloads/{{ payara_version }}/payara-{{ payara_version }}.tar.gz
    checksum: "sha256:{{ payara_sha256 }}"
    dest: /tmp/payara-{{ payara_version }}.tar.gz
  when: not payara_bin.stat.exists
  tags: payara
- name: Create Payara {{ payara_version }} directory
  file:
    path: /opt/payara-{{ payara_version }}
    state: directory
  tags: payara
- name: Unarchive Payara {{ payara_version }}
  unarchive:
    src: /tmp/payara-{{ payara_version }}.tar.gz
    extra_opts:
      - "--strip-components=1"
    dest: /opt/payara-{{ payara_version }}
    remote_src: yes
  when: not payara_bin.stat.exists
  tags: payara
- name: Symlink default Payara
  file:
    src: "payara-{{ payara_version }}"
    dest: "/opt/payara"
    state: link
  tags: payara
- name: Add asadmin executable
  copy:
    src: asadmin
    dest: /usr/local/bin
    mode: '0755'
  tags: payara
